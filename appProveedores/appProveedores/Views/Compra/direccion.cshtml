@model appProveedores.Models.Dirección

@{
    ViewBag.Title = "direccion";
}

<h2>Datos del Pedido</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Dirección</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.calle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.calle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.calle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.colonia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.colonia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.colonia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ciudad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ciudad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ciudad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

       

    

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Continuar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Devolver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
